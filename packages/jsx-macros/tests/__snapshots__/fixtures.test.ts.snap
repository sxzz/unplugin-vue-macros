// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`fixtures > ./fixtures/define-component.tsx 1`] = `
"
import { defineComponent as __MACROS_defineComponent } from "vue";
import { createDefaultPropsProxy as __MACROS_createDefaultPropsProxy } from "/vue-macros/jsx-macros/with-defaults";
import { createPropsRestProxy as __MACROS_createPropsRestProxy } from "vue";
import { useModel as __MACROS_useModel } from "/vue-macros/jsx-macros/use-model";import { defineComponent } from 'vue'

const Comp = __MACROS_defineComponent(
  (__MACROS_props) => {
const __MACROS_defaults_props = __MACROS_createDefaultPropsProxy(__MACROS_props, {'.bar': 'bar'!});
const props = __MACROS_createPropsRestProxy(__MACROS_defaults_props, ['bar']);
    const foo = __MACROS_useModel(props, 'foo', {
      validator: (value) => {
        return value === 'foo'
      },
      required: false,
      type: String,
    })
    return () => <div>{[foo.value, __MACROS_defaults_props.bar, props.baz]}</div>
  },
  { inheritAttrs: false , props: { bar: { required: true }, baz: null, foo: { validator: (value) => {
        return value === 'foo'
      }, required: false, type: String }, 'onUpdate:foo': null }},
)

const Comp1 = __MACROS_defineComponent((props: { bar: 'bar' }) => {
  const foo = __MACROS_useModel(props, 'foo')
  return () => <div>{[foo.value, props['bar']]}</div>
}, { props: { bar: null, foo: null, 'onUpdate:foo': null } })
"
`;

exports[`fixtures > ./fixtures/define-expose.tsx 1`] = `
"
import { useExpose as __MACROS_useExpose } from "/vue-macros/jsx-macros/use-expose";
import { getCurrentInstance as __MACROS_getCurrentInstance } from "vue";export default function (__MACROS_props) {
  __MACROS_useExpose(__MACROS_getCurrentInstance(), {
    foo: 1,
  })
  return <div />
}
"
`;

exports[`fixtures > ./fixtures/define-model.tsx 1`] = `
"
import { useModel as __MACROS_useModel } from "/vue-macros/jsx-macros/use-model";export const Comp = ({ bar, ...__MACROS_props }: { bar: string }) => {
  const foo = __MACROS_useModel(__MACROS_props, 'foo',{ default: bar })!
  return <div>{foo}</div>
}

export default function (__MACROS_props) {
  const modelValue = __MACROS_useModel<string>(__MACROS_props, 'modelValue',)!
  return (
    <Comp v-model:foo={modelValue.value} bar="bar">
      {modelValue.value}
    </Comp>
  )
}
"
`;

exports[`fixtures > ./fixtures/define-slots.tsx 1`] = `
"
import { getCurrentInstance as __MACROS_getCurrentInstance } from "vue";export const Comp = (__MACROS_props) => {
  const slots = Object.assign<{
    default: () => any
  }>({}, __MACROS_getCurrentInstance()?.slots)
  return <div>{slots.default()}</div>
}

export default function (__MACROS_props) {
  const slots = Object.assign({
    default: () => <div>default</div>,
  },__MACROS_getCurrentInstance()?.slots)
  return <div>{slots.default()}</div>
}
"
`;

exports[`react fixtures > ./fixtures/define-expose.tsx 1`] = `
"
import { forwardRef as __MACROS_forwardRef } from "react";
import { useImperativeHandle as __MACROS_useImperativeHandle } from "react";export default __MACROS_forwardRef(function (__MACROS_props, __MACROS_ref) {
  __MACROS_useImperativeHandle(__MACROS_ref, () =>({
    foo: 1,
  }), [])
  return <div />
})
"
`;
